version: '3'

services:

  # redis:
  #   restart: always
  #   container_name: flatter-redis
  #   image: redis:alpine
  #   command: redis-server --appendonly yes
  #   volumes:
  #     - redis-data:/data
  #   expose:
  #     - 6379
  #   networks:
  #     - sample-microservice

  server:
    restart: always
    container_name: sample-microservice-backend
    image: sample-microservice-backend:latest
    build: 
      context: .
      dockerfile: server/docker/Dockerfile
    # command: bash -c "/usr/src/app/flatter-backend/entrypoint.sh  && daphne -b 0.0.0.0 -p 8000 backend.asgi:application"
    # environment:
    #   DEBUG: ${DEBUG}
    #   DJANGO_ENV: ${DJANGO_ENV}
    #   DJANGO_ADMIN_USER: ${DJANGO_ADMIN_USER}
    #   DJANGO_ADMIN_EMAIL: ${DJANGO_ADMIN_EMAIL}
    #   DJANGO_ADMIN_PASSWORD: ${DJANGO_ADMIN_PASSWORD}
    #   SECRET_KEY: ${SECRET_KEY}
    #   DB_ENGINE: ${DB_ENGINE}
    #   DB_DATABASE: ${DB_DATABASE}
    #   DB_USER: ${DB_USER}
    #   DB_PASSWORD: ${DB_PASSWORD}
    #   DB_HOST: ${DB_HOST}

    # volumes:
    #   - static:/usr/src/app/flatter-backend/static
    #   - static:/usr/src/app/flatter-backend/media
    expose:
      - 8000
    # depends_on:
    #   - redis
    # links:
    #   - redis
    networks:
      - sample-microservice

  client:
    restart: always
    container_name: sample-microservice-client
    image: sample-microservice-client:latest
    build: 
      context: .
      dockerfile: client/docker/Dockerfile
      # args:
      #   API_SERVER: ${API_SERVER_URL}
    # environment:
    #   NODE_ENV: ${NODE_ENV}
    #   REACT_APP_PAYPAL_CLIENT_ID: ${REACT_APP_PAYPAL_CLIENT_ID}
    command: sh -c "serve -s build -l 3000 --no-clipboard"
    depends_on:
      - server
    expose:
      - 3000
    networks:
      - sample-microservice

  nginx:
    restart: always
    container_name: sample-microservice-nginx
    image: sample-microservice-nginx:latest
    build:
        context: ./nginx
        dockerfile: ./Dockerfile
    # volumes:
    #   - static:/usr/src/app/flatter-backend/static
    #   - static:/usr/src/app/flatter-backend/media
    ports:
      - 80:80
    depends_on:
      - server
      - client
    networks:
      - sample-microservice

# volumes:
#   static:
#     name: flatter-static
#   redis-data:
#     name: flatter-redis-data


networks:
  sample-microservice:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16